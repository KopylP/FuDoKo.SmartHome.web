<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>
  
  <PropertyGroup>
    <TypeScriptExperimentalDecorators>true</TypeScriptExperimentalDecorators>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile>C:\Users\pkopy\source\repos\FuDoKo.SmartHome.web\FuDoKo.SmartHome.web\FuDoKo.SmartHome.web.xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Mapster" Version="4.1.0" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Azure.SignalR" Version="1.1.1" />
    <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="2.9.6">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="2.2.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="2.2.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer.Design" Version="1.1.6" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="2.2.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.2.4" />
    <PackageReference Include="Pomelo.EntityFrameworkCore.MySql" Version="2.2.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="4.0.1" />
    <PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="4.0.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="ClientApp\Новая папка\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\Новая папка\**" />
    <EmbeddedResource Remove="ClientApp\Новая папка\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="ClientApp\Новая папка\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\components\add-button\add-button.component.ts" />
    <None Remove="ClientApp\src\app\components\controller-item\controller-item.component.ts" />
    <None Remove="ClientApp\src\app\components\edit-controller\edit-controller.component.ts" />
    <None Remove="ClientApp\src\app\components\home\home.component.html" />
    <None Remove="ClientApp\src\app\components\home\home.component.less" />
    <None Remove="ClientApp\src\app\components\home\home.component.ts" />
    <None Remove="ClientApp\src\app\components\login\login.component.ts" />
    <None Remove="ClientApp\src\app\components\controller-list\controller-list.component.html" />
    <None Remove="ClientApp\src\app\components\controller-list\controller-list.component.less" />
    <None Remove="ClientApp\src\app\components\controller-list\controller-list.component.ts" />
    <None Remove="ClientApp\src\app\components\register\register.component.ts" />
    <None Remove="ClientApp\src\app\components\sensor-edit\sensor-edit.component.ts" />
    <None Remove="ClientApp\src\app\components\sensor-item\sensor-item.component.ts" />
    <None Remove="ClientApp\src\app\components\sensor-list\sensor-list.component.ts" />
    <None Remove="ClientApp\src\app\interceptors\auth.interceptor.ts" />
    <None Remove="ClientApp\src\app\interfaces\Command.ts" />
    <None Remove="ClientApp\src\app\interfaces\ConditionType.ts" />
    <None Remove="ClientApp\src\app\interfaces\Controller.ts" />
    <None Remove="ClientApp\src\app\interfaces\ControllerAccess.ts" />
    <None Remove="ClientApp\src\app\interfaces\Device.ts" />
    <None Remove="ClientApp\src\app\interfaces\DeviceAccess.ts" />
    <None Remove="ClientApp\src\app\interfaces\DeviceConfiguration.ts" />
    <None Remove="ClientApp\src\app\interfaces\DeviceType.ts" />
    <None Remove="ClientApp\src\app\interfaces\Measure.ts" />
    <None Remove="ClientApp\src\app\interfaces\RegisterUser.ts" />
    <None Remove="ClientApp\src\app\interfaces\Script.ts" />
    <None Remove="ClientApp\src\app\interfaces\Sensor.ts" />
    <None Remove="ClientApp\src\app\interfaces\SensorType.ts" />
    <None Remove="ClientApp\src\app\interfaces\TokenResponse.ts" />
    <None Remove="ClientApp\src\app\interfaces\UserHasController.ts" />
    <None Remove="ClientApp\src\app\interfaces\UserHasDevice.ts" />
    <None Remove="ClientApp\src\app\services\auth.service.ts" />
    <None Remove="ClientApp\src\app\services\controller.service.ts" />
    <None Remove="ClientApp\src\app\services\edit-controller.service.ts" />
    <None Remove="ClientApp\src\app\services\register.service.ts" />
    <None Remove="ClientApp\src\app\services\sensor-edit.service.ts" />
    <None Remove="ClientApp\src\app\services\sensor-hub.service.ts" />
    <None Remove="ClientApp\src\app\services\sensor-type.service.ts" />
    <None Remove="ClientApp\src\app\services\sensor.service.ts" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\components\add-button\add-button.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\controller-item\controller-item.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\edit-controller\edit-controller.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\home\home.component.html">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\components\home\home.component.less">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\components\home\home.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\components\login\login.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\controller-list\controller-list.component.less">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\components\controller-list\controller-list.component.html">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\components\controller-list\controller-list.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\register\register.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\sensor-edit\sensor-edit.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\sensor-item\sensor-item.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\sensor-list\sensor-list.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interceptors\auth.interceptor.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\Command.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\ConditionType.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\ControllerAccess.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\Device.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\DeviceAccess.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\DeviceConfiguration.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\DeviceType.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\Measure.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\Script.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\Sensor.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\Controller.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\RegisterUser.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\SensorType.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\TokenResponse.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\UserHasController.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\UserHasDevice.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\controller.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\edit-controller.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\register.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\auth.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\sensor-edit.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\sensor-hub.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\sensor-type.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\sensor.service.ts" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.EntityFrameworkCore.Tools.DotNet" Version="2.0.0-preview2-final" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Data\Migrations\" />
  </ItemGroup>

  <ItemGroup>
    <None Include="Api\ApiErrors\ApiError.cs" />
    <None Include="Api\ApiErrors\BadRequestError.cs" />
    <None Include="Api\ApiErrors\InternalServerError.cs" />
    <None Include="Api\ApiErrors\NotFoundError.cs" />
    <None Include="Api\ApiErrors\UnauthorizedError.cs" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
